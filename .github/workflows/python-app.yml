# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      STORAGE_CREDENTIALS_B64: ${{ secrets.STORAGE_CREDENTIALS_B64 }}
      STORAGE_CREDENTIALS_B64_2: ${{ secrets.STORAGE_CREDENTIALS_B64_2 }}

    steps:
    - name: Install linux packages
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1 libglib2.0-0 libsm6 libxext6 ffmpeg
        ldconfig -p | grep libGL
    - name: Checkout code (with LFS)
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'
    - name: Install Qt runtime deps (EGL/OpenGL/X11)
      run: "sudo apt-get update\nsudo apt-get install -y \\\n  libegl1 \\\n  libgl1\
        \ \\\n  libglib2.0-0 \\\n  libx11-xcb1 \\\n  libxkbcommon-x11-0 \\\n  libxcb-cursor0\
        \ \\\n  libxcb-icccm4 \\\n  libxcb-keysyms1 \\\n  libxcb-render-util0 \\\n\
        \  libxcb-image0 \\\n  libxcb-util1 \\\n  libxrender1 \\\n  libxext6 \\\n\
        \  libxfixes3"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


    #- name: Lint with flake8
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      env:
        QT_QPA_PLATFORM: offscreen
    - name: Test with pytest
      run: |
        pytest
      env:
        QT_QPA_PLATFORM: offscreen
